#!/usr/bin/env bash

set -e

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd -P)"
REPO_DIR="$(dirname "$SCRIPT_DIR")"
DOCSET_NAME='LLVM'
BUILD_DIR=""
LLVM_VERSION=""
LLVM_SRC_DIR=""
LLVM_PREFIX="${LLVM_PREFIX/[~]/$HOME}"
ASSUME_LUMEN_STYLE_BUILD="$ASSUME_LUMEN_STYLE_BUILD"

source "${REPO_DIR}/_venv/bin/activate"

if [ ! -z "${LLVM_PREFIX}" ]; then
    if [ -d "${LLVM_PREFIX}" ]; then
        PATH="${LLVM_PREFIX}/bin:$PATH"
    else
        echo "LLVM_PREFIX is not a directory, or doesn't exist!"
        echo ""
        echo "    LLVM_PREFIX = ${LLVM_PREFIX}"
        echo ""
        exit 2
    fi
fi

if ! type -p sphinx-build >/dev/null; then
    echo "Cannot locate sphinx-build, is Sphinx installed?"
    exit 2
fi

# If LLVM_VERSION is not specified, try to detect if one is available on the PATH,
# then fallback to llvmenv if present
if [ -z "$LLVM_VERSION" ]; then
    if type -p llvm-config >/dev/null; then
        LLVM_VERSION="$(llvm-config --version)"
        LLVM_SRC_DIR="$(llvm-config --src-root)"
        if [ ! -d "${LLVM_SRC_DIR}" ]; then
            echo "The system LLVM source root (${LLVM_SRC_DIR}) doesn't exist"
            exit 2
        fi
    elif type -p llvmenv >/dev/null; then
        if LLVM_PREFIX="$(llvmenv prefix)"; then
            PATH="${LLVM_PREFIX}/bin"
            LLVM_VERSION="$(llvm-config --version)"
            LLVM_SRC_DIR="$(llvm-config --src-root)"
        else
            echo "There is no current llvmenv version active"
            exit 2
        fi
    else
        echo "Please set LLVM_VERSION to a valid LLVM version string"
        exit 2
    fi
fi

if [ -z "$NO_DOXYGEN" ]; then
    if [ "$ASSUME_LUMEN_STYLE_BUILD" = "true" ]; then
        llvm_docs_dir="${LLVM_SRC_DIR}/../build/host/docs"
        if [ ! -d "${llvm_docs_dir}" ]; then
            echo "Expected to find built docs directory at '${llvm_docs_dir}'"
            exit 2
        fi
        if [ -d "${llvm_docs_dir}/doxygen/html" ] && [ -f "${llvm_docs_dir}/llvm.tags" ]; then
            # Doxygen docs have been generated with a tagfile
            DOXYGEN_PATH="${llvm_docs_dir}/doxygen/html"
            cp --update "${llvm_docs_dir}/llvm.tags" "${llvm_docs_dir}/doxygen/html/llvm.tags"
        else
            echo "Doxygen documentation was not generated with a tagfile (not found at '${llvm_docs_dir}/llvm.tags')"
        fi
    elif [ -d "${LLVM_SRC_DIR}/build/docs/doxygen/html" ] && [ -f "${LLVM_SRC_DIR}/build/docs/llvm.tags" ]; then
        # Doxygen docs have been generated with a tagfile
        DOXYGEN_PATH="${LLVM_SRC_DIR}/build/docs/doxygen/html"
        cp --update "${LLVM_SRC_DIR}/build/docs/llvm.tags" "${LLVM_SRC_DIR}/build/docs/doxygen/html/llvm.tags" >/dev/null
    else
        echo "Doxygen documentation was not generated with a tagfile (not found at '${LLVM_SRC_DIR}/build/docs/llvm.tags')"
    fi
else
    echo "Skipping Doxygen documentation, as NO_DOXYGEN is set"
fi

VERSION_DIR="${REPO_DIR}/_build/${LLVM_VERSION}"
BUILD_DIR="${VERSION_DIR}/build"
DOCSET_ROOT="${VERSION_DIR}/${DOCSET_NAME}.docset"
OUTPUT_DIR="${DOCSET_ROOT}/Contents/Resources"
DOCS_DIR="${OUTPUT_DIR}/Documents"
mkdir -p "${VERSION_DIR}"
mkdir -p "${BUILD_DIR}"
mkdir -p "${DOCS_DIR}"

# Add icon
if [ -f "${REPO_DIR}/resources/icon.png" ]; then
    cp "${REPO_DIR}/resources/icon.png" "${DOCSET_ROOT}/icon.png" >/dev/null
fi

# No source available, download it
if [ -z "$LLVM_SRC_DIR" ]; then
    if [ "$ASSUME_LUMEN_STYLE_BUILD" = "true" ]; then
        echo "No sources found! Expected to find an already built LLVM source root"
        exit 2
    fi
    echo "No sources found, downloading LLVM ${LLVM_VERSION}.."
    src_name="llvm-${LLVM_VERSION}.src"
    LLVM_SRC_DIR="${VERSION_DIR}/src"
    if [ ! -d "${LLVM_SRC_DIR}" ]; then
        mkdir -p "${LLVM_SRC_DIR}"
        tarball="src.tar.xz"
        download_path="${VERSION_DIR}/${tarball}"
        if [ ! -f "${download_path}" ]; then
            url="http://releases.llvm.org/${LLVM_VERSION}/${src_name}.tar.xz"
            if ! wget --quiet --show-progress "$url" -O "${download_path}"; then
                exit 1
            fi
        fi
        if ! tar -xf "${download_path}" -C "${LLVM_SRC_DIR}" --strip-components 1 "${src_name}/docs" "${src_name}/examples"; then
            exit 1
        fi
    fi
fi

# Build docs
if [ ! -d "${BUILD_DIR}/html" ]; then
    if [ "$ASSUME_LUMEN_STYLE_BUILD" = "true" ]; then
        doc_src_dir="${LLVM_SRC_DIR}/../build/host/docs/html"
        if [ ! -d "${doc_src_dir}" ]; then
            echo "Expected to find built docs at '${doc_src_dir}'!"
            exit 2
        fi
        rsync -q -r -u --progress "${doc_src_dir}/" "${BUILD_DIR}/html" 
    else
        pushd "${LLVM_SRC_DIR}/docs"
        if ! make -f Makefile.sphinx BUILDDIR="${BUILD_DIR}"; then
            exit 1
        fi
        popd
    fi
fi

# Determine if we have Doxygen docs in an appropriate format
if [ ! -z "${DOXYGEN_PATH}" ] && [ -d "${DOXYGEN_PATH}" ]; then
    if [ ! -d "${DOCS_DIR}/doxygen" ]; then
        rsync -r -u --exclude="*.md5" --progress "${DOXYGEN_PATH}/" "${DOCS_DIR}/doxygen"
    fi
elif [ -z "$NO_DOXYGEN" ]; then
    # Fall back to legacy generation
    tarball="llvm_doxygen-${LLVM_VERSION}.tar.xz"
    url="http://releases.llvm.org/${LLVM_VERSION}/${tarball}"
    download_path="${BUILD_DIR}/doxygen.tar.xz"
    if [ ! -f "${download_path}" ]; then
        if ! wget --quiet --show-progress "${url}" -O "${download_path}"; then
            echo "Failed to download doxygen docs!"
            exit 1
        fi
    fi
    DOXYGEN_PATH="${BUILD_DIR}/doxygen"
    if ! tar -xf "${download_path}" -C "${DOXYGEN_PATH}"; then
        exit 1
    fi
fi


# Build successful, move output to docset directory
rsync -q -r -u --progress "${BUILD_DIR}/html/" "${DOCS_DIR}"

# Build docset database
EXTRA=""
if [ ! -z "$NO_DOXYGEN" ]; then
    EXTRA="--no-doxygen"
fi
if [ ! -z "$DEBUG" ]; then
    EXTRA="$EXTRA --debug"
fi
python3 "${REPO_DIR}/bin/index.py" \
    --docset="${DOCSET_NAME}.docset" \
    --docset-root="${DOCSET_ROOT}" \
    --llvm-version="${LLVM_VERSION}" \
    --llvm-source="${LLVM_SRC_DIR}" \
    $EXTRA
